/*
 * CPOO Server API
 * This is a prototype of CPOO Project's front/back API. 
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@mightycode.fr
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * UserSettingsDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-09-26T12:57:02.907739491Z[GMT]")

public class UserSettingsDTO {
  @SerializedName("theme")
  private String theme = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("UnreadBadges")
  private Boolean unreadBadges = null;

  @SerializedName("NotificationSound")
  private Boolean notificationSound = null;

  @SerializedName("profileImage")
  private String profileImage = null;

  public UserSettingsDTO theme(String theme) {
    this.theme = theme;
    return this;
  }

   /**
   * Get theme
   * @return theme
  **/
  @Schema(description = "")
  public String getTheme() {
    return theme;
  }

  public void setTheme(String theme) {
    this.theme = theme;
  }

  public UserSettingsDTO language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public UserSettingsDTO unreadBadges(Boolean unreadBadges) {
    this.unreadBadges = unreadBadges;
    return this;
  }

   /**
   * Get unreadBadges
   * @return unreadBadges
  **/
  @Schema(description = "")
  public Boolean isUnreadBadges() {
    return unreadBadges;
  }

  public void setUnreadBadges(Boolean unreadBadges) {
    this.unreadBadges = unreadBadges;
  }

  public UserSettingsDTO notificationSound(Boolean notificationSound) {
    this.notificationSound = notificationSound;
    return this;
  }

   /**
   * Get notificationSound
   * @return notificationSound
  **/
  @Schema(description = "")
  public Boolean isNotificationSound() {
    return notificationSound;
  }

  public void setNotificationSound(Boolean notificationSound) {
    this.notificationSound = notificationSound;
  }

  public UserSettingsDTO profileImage(String profileImage) {
    this.profileImage = profileImage;
    return this;
  }

   /**
   * Get profileImage
   * @return profileImage
  **/
  @Schema(description = "")
  public String getProfileImage() {
    return profileImage;
  }

  public void setProfileImage(String profileImage) {
    this.profileImage = profileImage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSettingsDTO userSettingsDTO = (UserSettingsDTO) o;
    return Objects.equals(this.theme, userSettingsDTO.theme) &&
        Objects.equals(this.language, userSettingsDTO.language) &&
        Objects.equals(this.unreadBadges, userSettingsDTO.unreadBadges) &&
        Objects.equals(this.notificationSound, userSettingsDTO.notificationSound) &&
        Objects.equals(this.profileImage, userSettingsDTO.profileImage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(theme, language, unreadBadges, notificationSound, profileImage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSettingsDTO {\n");
    
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    unreadBadges: ").append(toIndentedString(unreadBadges)).append("\n");
    sb.append("    notificationSound: ").append(toIndentedString(notificationSound)).append("\n");
    sb.append("    profileImage: ").append(toIndentedString(profileImage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
