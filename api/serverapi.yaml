openapi: 3.0.3
info:
  contact:
    email: contact@mightycode.fr
    url: https://mightycode.fr/
  description: |
    This is a prototype of CPOO Project's front/back API.
  title: CPOO Server API
  version: 0.0.1
servers:
  - url: http://localhost:8080/
security:
  - CookieAuth: [ ]
tags:
  - name: authentication
    description: Authentication endpoints.
  - name: administration
    description: Administration endpoints.
  - name: message
    description: Message management endpoints.
paths:
  /user/signup:
    post:
      summary: Sign up to the service
      description: Create a user account with provided credentials.
      security: [ ]
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: Success
        '409':
          description: 'Conflict: a user account with the same login already exists.'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/signin:
    post:
      summary: Sign in to the service
      description: Sign in using provided credentials and create a user session.
      security: [ ]
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: 'Success: a user session is created and a session cookie is returned.'
          headers:
            Set-Cookie:
              schema:
                type: string
        '401':
          description: 'Unauthorized: invalid login or password.'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/signout:
    post:
      summary: Sign out from the service
      description: Sign out and close the user session.
      tags:
        - authentication
      responses:
        '200':
          description: 'Success: the user session is closed.'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/{login}:
    delete:
      summary: Delete a user account
      description: Delete the account of the user matching the given login.
        Only the administrator can use this endpoint.
      tags:
        - administration
      parameters:
        - description: login of the user account to delete.
          in: path
          name: login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: 'Not found: User account not found.'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
components:
  schemas:
    MessageDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        from:
          type: string
          example: alice@acme
        to:
          type: string
          example: bob@acme
        type:
          type: string
          format: mime
          example: text/plain
        body:
          type: string
          example: This is the message
    UserDTO:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
          format: password
    ErrorDTO:
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID
      description: Use a session cookie to authenticate (see /login).
x-samples-languages:
  - curl
  - javascript
  - node
  - java
  - python
  - php
