openapi: 3.0.3
info:
  contact:
    email: contact@mightycode.fr
    url: https://mightycode.fr/
  description: |
    This is a prototype of CPOO Project's front/back API.
  title: CPOO Server API
  version: 0.0.1
servers:
  - url: http://localhost:8080/
security:
  - CookieAuth: [ ]
tags:
  - name: authentication
    description: Authentication endpoints.
  - name: administration
    description: Administration endpoints.
  - name: message
    description: Message management endpoints.
paths:
  /user/signup:
    post:
      summary: Sign up to the service
      description: Create a user account with provided credentials.
      security: [ ]
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: Success
        '409':
          description: 'Conflict: a user account with the same login already exists.'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/signin:
    post:
      summary: Sign in to the service
      description: Sign in using provided credentials and create a user session.
      security: [ ]
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: 'Success: a user session is created and a session cookie is returned.'
          headers:
            Set-Cookie:
              schema:
                type: string
        '401':
          description: 'Unauthorized: invalid login or password.'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/signout:
    post:
      summary: Sign out from the service
      description: Sign out and close the user session.
      tags:
        - authentication
      responses:
        '200':
          description: 'Success: the user session is closed.'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/{login}:
    delete:
      summary: Delete a user account
      description: Delete the account of the user matching the given login.
        Only the administrator can use this endpoint.
      tags:
        - administration
      parameters:
        - description: login of the user account to delete.
          in: path
          name: login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: 'Not found: User account not found.'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/forgotpwd:
    post:
      tags : 
       - forgot-pwd
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/NewPasswordDTO'
                  
      responses:
        '200':
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/settings:
    get:
      tags:
        - user
      summary: Get user settings information
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsDTO'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/account/chgusername:
    patch:
      tags:
        - account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/account/changepp:
    patch:
      tags:
        - account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
      responses:
        '200':
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'

  /user/changepwd:
    patch:
      tags : 
       - change-pwd
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/ChangePasswordDTO'
      responses:
        '200':
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/disconnect:
    post:
      tags:
        - account
      responses:
        '200':
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/notifications:
    patch:
      tags:
        - notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/NotificationsDTO'
      responses:
        '200':
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'

  /user/change-theme:
    patch:
      tags:
        - appearance
      summary: Change user theme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                themeId:
                  type: integer
      responses:
        '200':
          description: Theme changed successfully
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /user/language:
    patch:
      tags:
        - language
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
      responses:
        '200':
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'

  /discussions:
    get:
      tags:
        - messaging
      summary: Get a list of all discussions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiscussionDTO'
                  
  /discussions/{discussion_id}/messages:
    get:
      tags:
        - messaging
      summary: Get all messages in a conversation
      parameters:
        - name: discussion_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageDTO'
    post:
      tags:
        - messaging
      summary: Send a message in a disccusion
      parameters:
        - name: discussion_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageDTO'
      responses:
        '200':
          description: Message sent successfully
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /discussions/create:
    post:
      tags:
        - messaging
      summary: Create a new discussion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                participants:
                  type: array
                  items:
                    type: string
              required:
                - participants
      responses:
        '200':
          description: Conversation created successfully
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
components:
  schemas:
    MessageDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        from:
          type: string
          example: alice@acme
        to:
          type: string
          example: bob@acme
        type:
          type: string
          format: mime
          example: text/plain
        body:
          type: string
          example: This is the message
        timestamp:
          type: string
    UserDTO:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
          format : password
    UserSettingsDTO:
      type: object
      properties:
        theme:
          type: string
        language:
          type: string
        UnreadBadges:
          type: boolean
        NotificationSound:
          type: boolean
        profileImage:
          type: string
    DiscussionDTO:
      type: object
      properties:
        id:
          type: integer
        participants:
          type: array
          items:
            type: string
    NewPasswordDTO:
      type : object
      properties :
        email:
          type : string
        code :
          type : integer
        password :
          type : string
        confirm-password : 
          type : string
    ChangePasswordDTO:
      type : object
      properties :
        old-password:
          type : string
        new-password : 
          type : string
    NotificationsDTO:
      type: object
      properties:
        sounds:
          type: string
        badges:
          type: string
    ErrorDTO:
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID
      description: Use a session cookie to authenticate (see /login).
x-samples-languages:
  - curl
  - javascript
  - node
  - java
  - python
  - php